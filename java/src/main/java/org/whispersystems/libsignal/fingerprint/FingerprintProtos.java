// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FingerprintProtocol.proto

package org.whispersystems.libsignal.fingerprint;

public final class FingerprintProtos {
  private FingerprintProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface LogicalFingerprintOrBuilder extends
      // @@protoc_insertion_point(interface_extends:textsecure.LogicalFingerprint)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *  optional bytes identifier = 2;
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     * @return Whether the content field is set.
     */
    boolean hasContent();
    /**
     * <pre>
     *  optional bytes identifier = 2;
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     * @return The content.
     */
    com.google.protobuf.ByteString getContent();
  }
  /**
   * Protobuf type {@code textsecure.LogicalFingerprint}
   */
  public  static final class LogicalFingerprint extends
      com.google.protobuf.GeneratedMessageLite<
          LogicalFingerprint, LogicalFingerprint.Builder> implements
      // @@protoc_insertion_point(message_implements:textsecure.LogicalFingerprint)
      LogicalFingerprintOrBuilder {
    private LogicalFingerprint() {
      content_ = com.google.protobuf.ByteString.EMPTY;
    }
    private int bitField0_;
    public static final int CONTENT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString content_;
    /**
     * <pre>
     *  optional bytes identifier = 2;
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     * @return Whether the content field is set.
     */
    @java.lang.Override
    public boolean hasContent() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *  optional bytes identifier = 2;
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     * @return The content.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }
    /**
     * <pre>
     *  optional bytes identifier = 2;
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     * @param value The content to set.
     */
    private void setContent(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      content_ = value;
    }
    /**
     * <pre>
     *  optional bytes identifier = 2;
     * </pre>
     *
     * <code>optional bytes content = 1;</code>
     */
    private void clearContent() {
      bitField0_ = (bitField0_ & ~0x00000001);
      content_ = getDefaultInstance().getContent();
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code textsecure.LogicalFingerprint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint, Builder> implements
        // @@protoc_insertion_point(builder_implements:textsecure.LogicalFingerprint)
        org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprintOrBuilder {
      // Construct using org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *  optional bytes identifier = 2;
       * </pre>
       *
       * <code>optional bytes content = 1;</code>
       * @return Whether the content field is set.
       */
      @java.lang.Override
      public boolean hasContent() {
        return instance.hasContent();
      }
      /**
       * <pre>
       *  optional bytes identifier = 2;
       * </pre>
       *
       * <code>optional bytes content = 1;</code>
       * @return The content.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getContent() {
        return instance.getContent();
      }
      /**
       * <pre>
       *  optional bytes identifier = 2;
       * </pre>
       *
       * <code>optional bytes content = 1;</code>
       * @param value The content to set.
       * @return This builder for chaining.
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setContent(value);
        return this;
      }
      /**
       * <pre>
       *  optional bytes identifier = 2;
       * </pre>
       *
       * <code>optional bytes content = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearContent() {
        copyOnWrite();
        instance.clearContent();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:textsecure.LogicalFingerprint)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "content_",
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0000\u0001\n\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint> parser = PARSER;
          if (parser == null) {
            synchronized (org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:textsecure.LogicalFingerprint)
    private static final org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint DEFAULT_INSTANCE;
    static {
      LogicalFingerprint defaultInstance = new LogicalFingerprint();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        LogicalFingerprint.class, defaultInstance);
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<LogicalFingerprint> PARSER;

    public static com.google.protobuf.Parser<LogicalFingerprint> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CombinedFingerprintsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:textsecure.CombinedFingerprints)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional uint32 version = 1;</code>
     * @return Whether the version field is set.
     */
    boolean hasVersion();
    /**
     * <code>optional uint32 version = 1;</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     * @return Whether the localFingerprint field is set.
     */
    boolean hasLocalFingerprint();
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     * @return The localFingerprint.
     */
    org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getLocalFingerprint();

    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     * @return Whether the remoteFingerprint field is set.
     */
    boolean hasRemoteFingerprint();
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     * @return The remoteFingerprint.
     */
    org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getRemoteFingerprint();
  }
  /**
   * Protobuf type {@code textsecure.CombinedFingerprints}
   */
  public  static final class CombinedFingerprints extends
      com.google.protobuf.GeneratedMessageLite<
          CombinedFingerprints, CombinedFingerprints.Builder> implements
      // @@protoc_insertion_point(message_implements:textsecure.CombinedFingerprints)
      CombinedFingerprintsOrBuilder {
    private CombinedFingerprints() {
    }
    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>optional uint32 version = 1;</code>
     * @return Whether the version field is set.
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <code>optional uint32 version = 1;</code>
     * @param value The version to set.
     */
    private void setVersion(int value) {
      bitField0_ |= 0x00000001;
      version_ = value;
    }
    /**
     * <code>optional uint32 version = 1;</code>
     */
    private void clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000001);
      version_ = 0;
    }

    public static final int LOCALFINGERPRINT_FIELD_NUMBER = 2;
    private org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint localFingerprint_;
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     */
    @java.lang.Override
    public boolean hasLocalFingerprint() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     */
    @java.lang.Override
    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getLocalFingerprint() {
      return localFingerprint_ == null ? org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance() : localFingerprint_;
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     */
    private void setLocalFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
      if (value == null) {
        throw new NullPointerException();
      }
      localFingerprint_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     */
    private void setLocalFingerprint(
        org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder builderForValue) {
      localFingerprint_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeLocalFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (localFingerprint_ != null &&
          localFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance()) {
        localFingerprint_ =
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.newBuilder(localFingerprint_).mergeFrom(value).buildPartial();
      } else {
        localFingerprint_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
     */
    private void clearLocalFingerprint() {  localFingerprint_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int REMOTEFINGERPRINT_FIELD_NUMBER = 3;
    private org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint remoteFingerprint_;
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     */
    @java.lang.Override
    public boolean hasRemoteFingerprint() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     */
    @java.lang.Override
    public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getRemoteFingerprint() {
      return remoteFingerprint_ == null ? org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance() : remoteFingerprint_;
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     */
    private void setRemoteFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
      if (value == null) {
        throw new NullPointerException();
      }
      remoteFingerprint_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     */
    private void setRemoteFingerprint(
        org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder builderForValue) {
      remoteFingerprint_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeRemoteFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
      if (value == null) {
        throw new NullPointerException();
      }
      if (remoteFingerprint_ != null &&
          remoteFingerprint_ != org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.getDefaultInstance()) {
        remoteFingerprint_ =
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.newBuilder(remoteFingerprint_).mergeFrom(value).buildPartial();
      } else {
        remoteFingerprint_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
     */
    private void clearRemoteFingerprint() {  remoteFingerprint_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code textsecure.CombinedFingerprints}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints, Builder> implements
        // @@protoc_insertion_point(builder_implements:textsecure.CombinedFingerprints)
        org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprintsOrBuilder {
      // Construct using org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional uint32 version = 1;</code>
       * @return Whether the version field is set.
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <code>optional uint32 version = 1;</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return instance.getVersion();
      }
      /**
       * <code>optional uint32 version = 1;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <code>optional uint32 version = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      @java.lang.Override
      public boolean hasLocalFingerprint() {
        return instance.hasLocalFingerprint();
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      @java.lang.Override
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getLocalFingerprint() {
        return instance.getLocalFingerprint();
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      public Builder setLocalFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
        copyOnWrite();
        instance.setLocalFingerprint(value);
        return this;
        }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      public Builder setLocalFingerprint(
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder builderForValue) {
        copyOnWrite();
        instance.setLocalFingerprint(builderForValue);
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      public Builder mergeLocalFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
        copyOnWrite();
        instance.mergeLocalFingerprint(value);
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint localFingerprint = 2;</code>
       */
      public Builder clearLocalFingerprint() {  copyOnWrite();
        instance.clearLocalFingerprint();
        return this;
      }

      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      @java.lang.Override
      public boolean hasRemoteFingerprint() {
        return instance.hasRemoteFingerprint();
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      @java.lang.Override
      public org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint getRemoteFingerprint() {
        return instance.getRemoteFingerprint();
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      public Builder setRemoteFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
        copyOnWrite();
        instance.setRemoteFingerprint(value);
        return this;
        }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      public Builder setRemoteFingerprint(
          org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint.Builder builderForValue) {
        copyOnWrite();
        instance.setRemoteFingerprint(builderForValue);
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      public Builder mergeRemoteFingerprint(org.whispersystems.libsignal.fingerprint.FingerprintProtos.LogicalFingerprint value) {
        copyOnWrite();
        instance.mergeRemoteFingerprint(value);
        return this;
      }
      /**
       * <code>optional .textsecure.LogicalFingerprint remoteFingerprint = 3;</code>
       */
      public Builder clearRemoteFingerprint() {  copyOnWrite();
        instance.clearRemoteFingerprint();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:textsecure.CombinedFingerprints)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "version_",
              "localFingerprint_",
              "remoteFingerprint_",
            };
            java.lang.String info =
                "\u0001\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u000b\u0000\u0002" +
                "\t\u0001\u0003\t\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints> parser = PARSER;
          if (parser == null) {
            synchronized (org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:textsecure.CombinedFingerprints)
    private static final org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints DEFAULT_INSTANCE;
    static {
      CombinedFingerprints defaultInstance = new CombinedFingerprints();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CombinedFingerprints.class, defaultInstance);
    }

    public static org.whispersystems.libsignal.fingerprint.FingerprintProtos.CombinedFingerprints getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CombinedFingerprints> PARSER;

    public static com.google.protobuf.Parser<CombinedFingerprints> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
